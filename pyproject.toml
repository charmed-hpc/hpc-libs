# Copyright 2025 Canonical Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hpc-libs"
version = "0.1.0"
requires-python = ">=3.10"
description = "Collection of utilities to manage HPC related services."
authors = [
    { name = "Ubuntu High-Performance Computing", email = "hpc-ubuntu-group@canonical.com" },
]
maintainers = [
    { name = "Ubuntu High-Performance Computing", email = "hpc-ubuntu-group@canonical.com" },
]
license = "Apache-2.0"
readme = "README.md"
keywords = ["HPC", "administration", "orchestration", "utility"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "cryptography~=44.0.1",
    "pyyaml>=6.0.2",
    "python-dotenv~=1.0.1",
    "slurmutils==1.1.1",
    "distro~=1.9.0",
    "ops==2.22.0",
]

[project.optional-dependencies]
dev = [
    # tests deps
    "coverage[toml] ~= 7.6",
    "pyfakefs ~= 5.6.0",
    "pytest ~= 7.2",
    "pytest-order ~= 1.1",
    "ops-scenario==7.22.0",

    # Linting
    "ruff",
    "codespell",
    "pyright",
]

[project.urls]
repository = "https://github.com/charmed-hpc/hpc-libs.git"
issues = "https://github.com/charmed-hpc/hpc-libs/issues"


# Testing tools configuration
[tool.coverage.run]
branch = true
include = [
    "src/**/*.py"
]
omit = [
    "_apt.py"
]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"

# Spell checking tools configuration
[tool.codespell]
skip = "lib,venv,icon.svg,.tox,.git,.mypy_cache,.ruff_cache,.pytest_cache,.vscode,.coverage,.venv,cover,_apt.py"

# Linting tools configuration
[tool.ruff]
line-length = 99
lint.select = ["E", "W", "F", "C", "N", "D", "I001"]
lint.extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]
lint.ignore = ["E501", "D107"]
lint.per-file-ignores = { "**/tests/*" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
] }
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.pyright]
include = ["src/*"]
exclude = ["**/_apt.py"]
